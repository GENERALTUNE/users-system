language: cpp


# env:
#   - V=0.21.0
#   - V=0.20.0


services:
  - mysql

script: ./install.sh 

# before_install:
install:
  - OS=linux
  - ARCH=x86_64
  - sudo apt-get install openjdk-8-jdk
  - echo "deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8" | sudo tee /etc/apt/sources.list.d/bazel.list
  - curl https://bazel.build/bazel-release.pub.gpg | sudo apt-key add -
  - sudo apt-get update && sudo apt-get install bazel

  # - sudo mkdir -p /usr/local/boost
  # - cd  /usr/local/boost
  # - sudo wget http://www.sourceforge.net/projects/boost/files/boost/1.59.0/boost_1_59_0.tar.gz
  # - sudo tar -xvzf boost_1_59_0.tar.gz
  # - cd /home/travis/build/GENERALTUNE/users-system
  # 安装boost 
  # - sudo apt-get install libboost-dev
  - sudo apt-get install libboost-all-dev
  - ls /usr/local
  - ls /usr/share
  - ls /usr/lib
  # - ldconfig -l | grep boost
  - ls /usr/local/boost
  # 下载第三方依赖项目 
  - git submodule update --init  --recursive
  - pwd
  # 构建mysql cpp connector begin
  - cd third_party/mysql-connector-cpp
  - mkdir  build  &&  cd build  && mkdir target  
  # - cmake  -DCMAKE_BUILD_TYPE=Release  -DCMAKE_INSTALL_PREFIX='third_party/mysqlcppconn_prebuilt' 
  # - cmake  mysql-connector-cpp   -DCMAKE_BUILD_TYPE=Release  -DCMAKE_INSTALL_PREFIX='mysql-connector-cpp-build'
  - cmake  ..  -DCMAKE_BUILD_TYPE=Release  -DCMAKE_INSTALL_PREFIX=./target  -DWITH_JDBC=ON  -DWITH_BOOST=/usr/local/boost 
   # -DDOWNLOAD_BOOST=1 -DWITH_BOOST=/usr/local/boost
  - cmake --build . --target install 
  # 构建mysql connector-cpp end
  - cd ../../..
  # 赋予编译权限
  - chmod +x install.sh
  # - sudo apt install libmysqlclient-dev
  # cmake --build mysql-connector-cpp --target install  -j8
  # - wget  https://cdn.mysql.com//Downloads/Connector-C++/libmysqlcppconn-dev_8.0.19-1ubuntu16.04_amd64.deb
  # - sudo dpkg -i libmysqlcppconn-dev_8.0.19-1ubuntu16.04_amd64.deb

  
# after_success: true

#after_script前5句是把部署分支的.git文件夹保护起来，用于保留历史部署的commit日志，否则部署分支永远只有一条commit记录。
#命令里面的变量都是在Travis CI里配置过的。
# after_script:
#   - git clone https://${GH_REF} .temp
#   - cd .temp
#   - git checkout gh-pages
#   - cd ../
#   - mv .temp/.git dist
#   - cd dist
#   - git config user.name "${U_NAME}"
#   - git config user.email "${U_EMAIL}"
#   - git add .
#   - git commit -m ":construction_worker:- Build & Deploy by Travis CI"
#   - git push --force --quiet "https://${Travis_Token}@${GH_REF}" gh-pages:${D_BRANCH}

# 只有指定的分支提交时才会运行脚本
branches:
  only:
    - master


before_deploy:
  # Set up git user name and tag this commit
  - git config --local user.name generaltune
  - git config --local user.email 577174042@qq.com
  - export TRAVIS_TAG=${TRAVIS_TAG:-$(date +'%Y%m%d%H%M%S')-$(git log --format=%h -1)}
  - git tag $TRAVIS_TAG

deploy:
  provider: releases
  api_key: $GITHUB_TOKEN
  file_glob: true
  file: bazel-bin/src/* 
  skip_cleanup: true


# deploy:
#   provider: releases
#   api_key: "GITHUB OAUTH TOKEN"
#   file: "FILE TO UPLOAD"
#   skip_cleanup: true
#   on:
#     tags: true
