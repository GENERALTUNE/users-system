// the base protobuf data for a simple user login system

syntax = "proto3";
option java_multiple_files = true;
option java_package = "io.grpc.examples.usersystem";
option java_outer_classname = "UserSystemProto";
option objc_class_prefix = "HLW";

package usersystem;

service UserSystem {
    rpc Register(RegisterRequest) returns (RegisterResponse) {}
    rpc Login(LoginRequest) returns (LoginResponse) {}
    rpc CheckLogin(CheckLoginRequest) returns (stream CheckLoginResponse) {}
    rpc Logout(LogoutRequest) returns (CommonResponse) {}
}

enum ResponseCode {
    OK = 0;
    ERROR_REGISTER_USERNAME_HAS_BEEN_TAKEN = 1;
    ERROR_REGISTER_EMPTY_USERNAME_PASSWORD = 2;
    ERROR_LOGIN_WRONG_USERNAME = 3; // no such user, register required
    ERROR_LOGIN_WRONG_PASSWORD = 4; // no password, try again
    ERROR_LOGIN_STATUS_INVALID = 5;
    ERROR_ANDROID_JNI_CALL = 6;
    ERROR_GRPC_ERROR = 7;
    ERROR_INVALID_USERNAME = 8;
    ERROR_UNKNOWN = 9;
}

enum Platform {
    Type_Desktop = 0;
    Type_Android = 1; // do not use ANDROID conflict with android build system
    Type_iOS = 2;
}

message Geo {
    double lat = 1;
    double lng = 2;
}

message UserModel {
    string id = 1;
    string username = 2;
    string password = 3;
    int32 age = 4;

    enum UserGender {
        MALE = 0;
        FEMALE = 1;
        NEUTER = 2;
    }
    UserGender gender = 5;
    string phone_number = 6;
    Geo geo = 7;
    uint64 create_at_millis = 8;
    uint64 update_at_millis = 9;
}

message UserLoginHistoryModel {
    string id = 1;
    string username = 2;
    string token = 3;
    string device_id = 4;
    Platform from_platform = 5;
    bool is_valid = 6;
    uint64 create_at_millis = 7;
    uint64 update_at_millis = 8;
    uint64 expire_at_millis = 9;
}

message CommonResponse {
    ResponseCode code = 1;
    string message = 2;
    int32 grpc_error_code = 3;
    string grpc_error_message = 4;
    string grpc_error_details = 5;
}

message RegisterRequest {
    string username = 1;
    string password = 2;
    string device_id = 3;
    Platform platform = 4;
}

message RegisterResponse {
    CommonResponse response = 1;
    UserModel userModel = 2;
    string token = 3;
}

message LoginRequest {
    string username = 1;
    string password = 2;
    string device_id = 3;
    Platform platform = 4;
    Geo geo = 5;
}

message LoginResponse {
    CommonResponse response = 1;
    UserModel userModel = 2;
    string token = 3;
}

message CheckLoginRequest {
    string username = 1;
    string token = 2;
    string device_id = 3;
    Platform from_platform = 4;
    Geo geo = 5;
}

message CheckLoginResponse {
    CommonResponse response = 1;
}

message LogoutRequest {
    string username = 1;
    string token = 2;
}